#include <fstream>
#include <iostream>
using namespace std;
class Sort {
 private:
  int count;
  int* dataAry;

 public:
  Sort() {
    count = 0;
    dataAry = nullptr;
  }
  int countData(ifstream& inFile, ofstream& deBugFile) {
    deBugFile << "Entering countData ()" << endl;
    count = 0;
    int data;
    while (inFile >> data) {
      count++;
    }
    deBugFile << "leaving countData count=" << count << endl;
    return count;
  }

  void loadData(ifstream& inFile, int* dataAry, int count,
                ofstream& deBugFile) {
    deBugFile << "Entering loadData ()" << endl;
    int index = 0;
    int data;
    while (index < count && inFile >> data) {
      dataAry[index] = data;
      index++;
    }
    deBugFile << "leaving loadData" << endl;
  }
  void selectionSort(int* dataAry, int count, ofstream& deBugFile) {
    deBugFile << "Entering selectionSort()";
    int minVal, minIndex, tmp;
    for (int i = 0; i < count - 1; i++) {
      minVal = dataAry[i];
      minIndex = i;
      for (int j = i + 1; j < count; j++) {
        if (dataAry[j] < minVal) {
          minIndex = j;
          minVal = dataAry[j];
        }
      }
      if (minIndex != i) {
        tmp = dataAry[i];
        dataAry[i] = dataAry[minIndex];
        dataAry[minIndex] = tmp;
      }
      deBugFile << "** In selectionSort printing dataAry i = " << i
                << " minIndex= " << minIndex << endl;
      printDataAry(dataAry, count, deBugFile, deBugFile);
    }
    deBugFile << "leaving selectionSort()" << endl;
  }

  void printDataAry(int* dataAry, int count, ofstream& fileOut,
                    ofstream& deBugFile) {
    deBugFile << "Entering printDataAry ()" << endl;
    int index = 0;
    while (index < count) {
      fileOut << dataAry[index] << endl;
      index++;
    }
    deBugFile << "leaving printDataAry ()" << endl;
  }
};

int main(int argc, char* argv[]) {
  ifstream inFile(argv[1]);
  ofstream outFile(argv[2]);
  ofstream deBugFile(argv[3]);
  Sort sorter;
  int count = sorter.countData(inFile, deBugFile);
  deBugFile << "In main () count = " << count << endl;
  int* dataAry = new int[count];

  inFile.close();
  inFile.open(argv[1]);
  sorter.loadData(inFile, dataAry, count, deBugFile);
  outFile << "*** Printing Data of before sorting ***" << endl;
  sorter.printDataAry(dataAry, count, outFile, deBugFile);
  sorter.selectionSort(dataAry, count, deBugFile);
  outFile << "*** Printing Data after sorting ***" << endl;
  sorter.printDataAry(dataAry, count, outFile, deBugFile);
  inFile.close();
  outFile.close();
  deBugFile.close();
  return 0;
}
